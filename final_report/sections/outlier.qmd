---
title: "Untitled"
format: html
editor: visual
---

## Quarto

```{r, warning=FALSE}
#|code-fold: true
#|code-summary: "Click to show code"
# Boxplot for Age
boxplot(preprocessed_stroke_tb$age, main="Boxplot of Age", ylab="Age", col="lightblue")

# Boxplot for Average Glucose Level
boxplot(preprocessed_stroke_tb$avg_glucose_level, main="Boxplot of Average Glucose Level", ylab="Average Glucose Level", col="lightgreen")

# Boxplot for BMI
boxplot(preprocessed_stroke_tb$bmi, main="Boxplot of BMI", ylab="BMI", col="lightcoral")

#We use the IQR method to identify outliers
identify_outliers <- function(column) {
  Q1 <- quantile(column, 0.25)
  Q3 <- quantile(column, 0.75)
  IQR <- Q3 - Q1
  lower_bound <- Q1 - 1.5 * IQR
  upper_bound <- Q3 + 1.5 * IQR
  
  # Identify Outliers
  outliers <- column[column < lower_bound | column > upper_bound]
  return(outliers)
}

# Apply the function to the variables
outliers_age <- identify_outliers(encoded_stroke_tb$age)
outliers_glucose <- identify_outliers(encoded_stroke_tb$avg_glucose_level)
outliers_bmi <- identify_outliers(encoded_stroke_tb$bmi)

#We create a function count_outliers that we will use to identify and count outliers in each non-binary quantitative variable 
  count_outliers <- function(column) {
  Q1 <- quantile(column, 0.25, na.rm = TRUE)
  Q3 <- quantile(column, 0.75, na.rm = TRUE)
  IQR <- Q3 - Q1
  lower_bound <- Q1 - 1.5 * IQR
  upper_bound <- Q3 + 1.5 * IQR
  
# Count outliers
outlier_count <- sum(column < lower_bound | column > upper_bound, na.rm = TRUE)
  return(outlier_count)
}

# Create a vector to hold the outlier counts
outlier_counts <- sapply(encoded_stroke_tb[, c("age", "avg_glucose_level", "bmi")], count_outliers)
outlier_counts
```

Finding zero outliers for `age` indicates a nearly normal distribution among the individuals in our population. With a dataset containing 5,110 rows, the identification of 627 outliers for `avg_glucose_level`, representing approximately 12.25% of the total population, and 126 outliers for `bmi`, constituting about 2.47%. Both boxplots display a considerable number of outliers in the higher range, indicating that there are subsets of individuals in the dataset with unusually high glucose levels and BMI values. These outliers could be due to a variety of factors, such as lifestyle, health conditions, or measurement errors. Considering their importance as risk factors, we decided to keep them in the dataset for now. However, we may revisit this decision later in the analysis, especially as we didn't examine the distributions in the upsampled dataset yet.

After conducting the analysis of the numerical variables, we examine the distribution of the categorical variables.

Two bar plots captured our attention: the one for the feature `gender`=`Other` and the one for the `work_type`=`Never_worked`. The former appears only once in the dataset, while the latter appears just 22 times out of a total of 5,110 observations. Due to their extreme underrepresentation, we decided to exclude these observations from our analysis as they add unnecessary complexity (`gender` = `Other` has already been removed as we didn't encode it the last section).

```{r, warning=FALSE}
#|code-fold: true
#|code-summary: "Click to show code"

# Filter where gender == "Other"
filtered_gender <- preprocessed_stroke_tb %>%
  filter(gender == "Other")

# Count occurrences for the plot
gender_count <- table(filtered_gender$gender)

# Create Plotly bar chart
fig_gender <- plot_ly(
  x = names(gender_count),
  y = as.numeric(gender_count),
  type = 'bar',
  text = as.numeric(gender_count),
  textposition = 'auto',
  name = "Gender",
  marker = list(color = 'blue')
) %>%
  layout(
    title = "Distribution of Other Gender",
    xaxis = list(title = "Gender"),
    yaxis = list(title = "Count")
  )

fig_gender


# Distribution of Work Type Never worked
table(encoded_stroke_tb$work_type_Never_worked)
ggplot(encoded_stroke_tb, aes(x=factor(work_type_Never_worked))) + 
  geom_bar() + 
  labs(x='1 if Work Type is Never Worked, 0 if not', y='Count', title='Distribution of Work Type is Never worked')

#Removal of the observations and columns
outlier_stroke_tb <- encoded_stroke_tb %>%
  filter(work_type_Never_worked == 0)

outlier_stroke_tb <- encoded_stroke_tb %>%
  select(-work_type_Never_worked)

# Verify the columns are removed
str(outlier_stroke_tb)

# save
write.csv(outlier_stroke_tb, "../../data/datasets/outlier_stroke_tb.csv", row.names = FALSE)
#|code-fold: true
#|code-summary: "Click to show code"
# Boxplot for Age
boxplot(preprocessed_stroke_tb$age, main="Boxplot of Age", ylab="Age", col="lightblue")

# Boxplot for Average Glucose Level
boxplot(preprocessed_stroke_tb$avg_glucose_level, main="Boxplot of Average Glucose Level", ylab="Average Glucose Level", col="lightgreen")

# Boxplot for BMI
boxplot(preprocessed_stroke_tb$bmi, main="Boxplot of BMI", ylab="BMI", col="lightcoral")

#We use the IQR method to identify outliers
identify_outliers <- function(column) {
  Q1 <- quantile(column, 0.25)
  Q3 <- quantile(column, 0.75)
  IQR <- Q3 - Q1
  lower_bound <- Q1 - 1.5 * IQR
  upper_bound <- Q3 + 1.5 * IQR
  
  # Identify Outliers
  outliers <- column[column < lower_bound | column > upper_bound]
  return(outliers)
}

# Apply the function to the variables
outliers_age <- identify_outliers(encoded_stroke_tb$age)
outliers_glucose <- identify_outliers(encoded_stroke_tb$avg_glucose_level)
outliers_bmi <- identify_outliers(encoded_stroke_tb$bmi)

#We create a function count_outliers that we will use to identify and count outliers in each non-binary quantitative variable 
  count_outliers <- function(column) {
  Q1 <- quantile(column, 0.25, na.rm = TRUE)
  Q3 <- quantile(column, 0.75, na.rm = TRUE)
  IQR <- Q3 - Q1
  lower_bound <- Q1 - 1.5 * IQR
  upper_bound <- Q3 + 1.5 * IQR
  
# Count outliers
outlier_count <- sum(column < lower_bound | column > upper_bound, na.rm = TRUE)
  return(outlier_count)
}

# Create a vector to hold the outlier counts
outlier_counts <- sapply(encoded_stroke_tb[, c("age", "avg_glucose_level", "bmi")], count_outliers)
outlier_counts
Finding zero outliers for `age` indicates a nearly normal distribution among the individuals in our population. With a dataset containing 5,110 rows, the identification of 627 outliers for `avg_glucose_level`, representing approximately 12.25% of the total population, and 126 outliers for `bmi`, constituting about 2.47%. Both boxplots display a considerable number of outliers in the higher range, indicating that there are subsets of individuals in the dataset with unusually high glucose levels and BMI values. These outliers could be due to a variety of factors, such as lifestyle, health conditions, or measurement errors. Considering their importance as risk factors, we decided to keep them in the dataset for now. However, we may revisit this decision later in the analysis, especially as we didn't examine the distributions in the upsampled dataset yet.

After conducting the analysis of the numerical variables, we examine the distribution of the categorical variables.

Two bar plots captured our attention: the one for the feature `gender`=`Other` and the one for the `work_type`=`Never_worked`. The former appears only once in the dataset, while the latter appears just 22 times out of a total of 5,110 observations. Due to their extreme underrepresentation, we decided to exclude these observations from our analysis as they add unnecessary complexity (`gender` = `Other` has already been removed as we didn't encode it the last section).

#|code-fold: true
#|code-summary: "Click to show code"

# Filter where gender == "Other"
filtered_gender <- preprocessed_stroke_tb %>%
  filter(gender == "Other")

# Count occurrences for the plot
gender_count <- table(filtered_gender$gender)

# Create Plotly bar chart
fig_gender <- plot_ly(
  x = names(gender_count),
  y = as.numeric(gender_count),
  type = 'bar',
  text = as.numeric(gender_count),
  textposition = 'auto',
  name = "Gender",
  marker = list(color = 'blue')
) %>%
  layout(
    title = "Distribution of Other Gender",
    xaxis = list(title = "Gender"),
    yaxis = list(title = "Count")
  )

fig_gender


# Distribution of Work Type Never worked
table(encoded_stroke_tb$work_type_Never_worked)
ggplot(encoded_stroke_tb, aes(x=factor(work_type_Never_worked))) + 
  geom_bar() + 
  labs(x='1 if Work Type is Never Worked, 0 if not', y='Count', title='Distribution of Work Type is Never worked')

#Removal of the observations and columns
outlier_stroke_tb <- encoded_stroke_tb %>%
  filter(work_type_Never_worked == 0)

outlier_stroke_tb <- encoded_stroke_tb %>%
  select(-work_type_Never_worked)

# Verify the columns are removed
str(outlier_stroke_tb)

# save
write.csv(outlier_stroke_tb, "../../data/datasets/outlier_stroke_tb.csv", row.names = FALSE)

```
