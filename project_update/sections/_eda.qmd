# Exploratory Data Analysis (EDA)

## Structure & Initial Visualizations

We decided to split our EDA into three distinct parts. Part I treats descriptive statistics, the general structure of our dataset and the distribution of the variables. Part II focuses on a univariate analysis of the features and their correlations with the target variable `stroke`. Part III will be dedicated to the bivariate analysis of the features and an examination of multicollinearity. For the visualizations, we opted for interactivity and chose to use `plotly`. Unfortunately, we were not able to implement the interactive plots in the markdown file, but we provide the code for the Shiny app below and the graphs as screenshots. 

The first draft of our EDA Visualization examines the distribution of the numerical features and their relationship with the target variable in a violin plot:

```{r, message = FALSE}
#| code-fold: true
#| code-summary: "Click to show code"

# Load necessary libraries
library(shiny)
library(plotly)
library(dplyr)

# Load the data using relative path with `..` to go up levels
outlier_stroke_tb <- read.csv("../../data/outlier_stroke_tb.csv")

# Define numerical variables (adjust if there are more)
numerical_variables <- c("age", "avg_glucose_level", "bmi")

# Shiny app with separate display of the correlation coefficient
shinyApp(
  ui = fluidPage(
    selectInput("selected_variable", "Choose a Variable:", choices = numerical_variables),
    plotlyOutput("violin_plot"),
    htmlOutput("correlation_text")  # Separate output for the correlation coefficient
  ),
  server = function(input, output) {
    
    output$violin_plot <- renderPlotly({
      selected_variable <- input$selected_variable
      
      # Generate the violin plot
      plot <- plot_ly(outlier_stroke_tb, x = ~factor(stroke), y = ~as.numeric(outlier_stroke_tb[[selected_variable]]), type = "violin",
                      box = list(visible = TRUE),
                      meanline = list(visible = TRUE)) %>%
        layout(
          title = paste("Violin Plot of", selected_variable, "by Stroke"),
          xaxis = list(title = "Stroke"),
          yaxis = list(title = selected_variable)
        )
      
      plot  # Display the plot
    })
    
    # Render the correlation text below the plot
    output$correlation_text <- renderUI({
      selected_variable <- input$selected_variable
      correlation <- cor(as.numeric(outlier_stroke_tb[[selected_variable]]), as.numeric(outlier_stroke_tb$stroke), method = "pearson")
      HTML(paste("Correlation Coefficient with Stroke:", round(correlation, 2)))
    })
  }
)
```

![Age vs. Stroke](../../data/png_for_update/age.png) 

![avg_glucose_level vs. Stroke](../../data/png_for_update/avg_glucose_level.png)


![bmi vs. Stroke](../../data/png_for_update/bmi.png)


The second draft of our EDA Visualization examines the distribution of the categorical variables and their relationship with the target variable in a stacked bar chart:

--> Bolor's Chart here 
```{r, message = FALSE}
#| code-fold: true
#| code-summary: "Click to show code"

# Load necessary libraries
library(shiny)
library(plotly)
library(dplyr)
library(vcd)
library(htmltools)

# Load the data
outlier_stroke_tb <- read.csv("../../data/outlier_stroke_tb.csv")

# Define categorical variables
cat_variables <- c("hypertension", "heart_disease", "ever_married", "work_type", "Residence_type", "smoking_status", "gender")

# Shiny app with stacked bar chart and association test results
shinyApp(
  ui = fluidPage(
    selectInput("selected_variable", "Choose a Variable:", choices = cat_variables),
    plotlyOutput("stacked_bar_chart"),
    htmlOutput("test_results")  # Output for Chi-Square and Cramér's V results
  ),
  
  server = function(input, output) {
    
    output$stacked_bar_chart <- renderPlotly({
      selected_variable <- input$selected_variable
      
      # Generate the stacked bar chart data
      plot_data <- outlier_stroke_tb %>%
        count(stroke = as.factor(stroke), category = as.factor(!!sym(selected_variable))) %>%
        rename(count = n)
      
      # Create the stacked bar chart
      plot <- plot_ly(plot_data, x = ~stroke, y = ~count, color = ~category,
                      type = "bar") %>%
        layout(barmode = "stack",
               title = paste("Stacked Bar Chart of", selected_variable, "by Stroke"),
               xaxis = list(title = "Stroke"),
               yaxis = list(title = "Count"),
               legend = list(title = list(text = selected_variable)))
      
      plot  # Display the plot
    })
    
    output$test_results <- renderUI({
      selected_variable <- input$selected_variable
      
      # Create a contingency table for stroke and the selected categorical variable
      contingency_table <- table(outlier_stroke_tb$stroke, outlier_stroke_tb[[selected_variable]])
      
      # Check if the contingency table has enough data for the chi-square test
      if (all(contingency_table > 0)) {
        # Run the chi-square test
        chi_square_result <- chisq.test(contingency_table)
        
        # Calculate Cramér's V to assess the strength of association
        cramers_v <- assocstats(contingency_table)$cramer
        
        # Display the test results
        test_results <- paste(
          "Chi-square P-value:", round(chi_square_result$p.value, 4), "<br>",
          "Cramér's V:", round(cramers_v, 4)
        )
      } else {
        test_results <- "Insufficient data for Chi-Square test"
      }
      
      # Display the test results in the app
      HTML(test_results)
    })
  }
)
```



## Summary Statistics

Provide summary statistics for key variables to give an overview of the data.

```{r}
#| label: summary-statistics
#| eval: false # do not evaluate as this is just an example

# Summary statistics example
summary(data_clean)
```

## Key Findings or Patterns

The findings in our correlative analysis are up until now rather modest. None of the predictors shows a strong correlation with our target variable The strongest correlation is observed with the feature `age` (0.25), particularly in the age range of 60 to 80 years. The correlation between the other categorical features and the target variable seem to be of low effect size. But at the current stage, we can not make any definitive conclusions as the scope of interpretations we can make upon our initial analysis is limited. Furthermore, regarding the categorical variables test results, we have to be cautious as we tested variables with multiple components against `stroke`, so that we cannot attribute the correlation to a specific subcategory.
